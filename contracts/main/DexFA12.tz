{
  "text_code":
    "{ parameter\n    (or (or (or (pair %approve (address %spender) (nat %value)) (unit %default))\n            (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))\n                (pair %getBalance (address %owner) (contract nat))))\n        (or (or (contract %getReserves (pair nat nat)) (pair %getTotalSupply unit (contract nat)))\n            (or (pair %transfer (address %from) (pair (address %to) (nat %value)))\n                (or %use\n                   (or (or (pair %divestLiquidity (pair (nat %min_tez) (nat %min_tokens)) (nat %shares))\n                           (nat %initializeExchange))\n                       (or (nat %investLiquidity)\n                           (pair %tezToTokenPayment (nat %min_out) (address %receiver))))\n                   (or (or (pair %tokenToTezPayment (pair (nat %amount) (nat %min_out)) (address %receiver))\n                           (pair %veto (nat %value) (address %voter)))\n                       (or (pair %vote (pair (key_hash %candidate) (nat %value)) (address %voter))\n                           (address %withdrawProfit))))))) ;\n  storage\n    (pair (pair (big_map %dex_lambdas\n                   nat\n                   (lambda\n                      (pair (pair (or (or (or (pair %divestLiquidity (pair (nat %min_tez) (nat %min_tokens)) (nat %shares))\n                                              (nat %initializeExchange))\n                                          (or (nat %investLiquidity)\n                                              (pair %tezToTokenPayment (nat %min_out) (address %receiver))))\n                                      (or (or (pair %tokenToTezPayment (pair (nat %amount) (nat %min_out)) (address %receiver))\n                                              (pair %veto (nat %value) (address %voter)))\n                                          (or (pair %vote (pair (key_hash %candidate) (nat %value)) (address %voter))\n                                              (address %withdrawProfit))))\n                                  (pair (pair (pair (pair (pair (address %baker_validator) (option %current_candidate key_hash))\n                                                          (pair (option %current_delegated key_hash) (timestamp %last_update_time)))\n                                                    (pair (pair (timestamp %last_veto)\n                                                                (big_map %ledger\n                                                                   address\n                                                                   (pair (pair (map %allowances address nat) (nat %balance)) (nat %frozen_balance))))\n                                                          (pair (timestamp %period_finish) (nat %reward))))\n                                              (pair (pair (pair (nat %reward_paid) (nat %reward_per_sec))\n                                                          (pair (nat %reward_per_share) (nat %tez_pool)))\n                                                    (pair (pair (address %token_address) (nat %token_pool))\n                                                          (pair (nat %total_reward) (nat %total_supply)))))\n                                        (pair (pair (pair (nat %total_votes)\n                                                          (big_map %user_rewards address (pair (nat %reward) (nat %reward_paid))))\n                                                    (pair (nat %veto) (big_map %vetos key_hash timestamp)))\n                                              (pair (big_map %voters\n                                                       address\n                                                       (pair (pair (option %candidate key_hash) (timestamp %last_veto))\n                                                             (pair (nat %veto) (nat %vote))))\n                                                    (big_map %votes key_hash nat)))))\n                            address)\n                      (pair (list operation)\n                            (pair (pair (pair (pair (pair (address %baker_validator) (option %current_candidate key_hash))\n                                                    (pair (option %current_delegated key_hash) (timestamp %last_update_time)))\n                                              (pair (pair (timestamp %last_veto)\n                                                          (big_map %ledger\n                                                             address\n                                                             (pair (pair (map %allowances address nat) (nat %balance)) (nat %frozen_balance))))\n                                                    (pair (timestamp %period_finish) (nat %reward))))\n                                        (pair (pair (pair (nat %reward_paid) (nat %reward_per_sec))\n                                                    (pair (nat %reward_per_share) (nat %tez_pool)))\n                                              (pair (pair (address %token_address) (nat %token_pool))\n                                                    (pair (nat %total_reward) (nat %total_supply)))))\n                                  (pair (pair (pair (nat %total_votes)\n                                                    (big_map %user_rewards address (pair (nat %reward) (nat %reward_paid))))\n                                              (pair (nat %veto) (big_map %vetos key_hash timestamp)))\n                                        (pair (big_map %voters\n                                                 address\n                                                 (pair (pair (option %candidate key_hash) (timestamp %last_veto))\n                                                       (pair (nat %veto) (nat %vote))))\n                                              (big_map %votes key_hash nat)))))))\n                (big_map %metadata string bytes))\n          (pair (pair %storage\n                   (pair (pair (pair (pair (address %baker_validator) (option %current_candidate key_hash))\n                                     (pair (option %current_delegated key_hash) (timestamp %last_update_time)))\n                               (pair (pair (timestamp %last_veto)\n                                           (big_map %ledger\n                                              address\n                                              (pair (pair (map %allowances address nat) (nat %balance)) (nat %frozen_balance))))\n                                     (pair (timestamp %period_finish) (nat %reward))))\n                         (pair (pair (pair (nat %reward_paid) (nat %reward_per_sec))\n                                     (pair (nat %reward_per_share) (nat %tez_pool)))\n                               (pair (pair (address %token_address) (nat %token_pool))\n                                     (pair (nat %total_reward) (nat %total_supply)))))\n                   (pair (pair (pair (nat %total_votes)\n                                     (big_map %user_rewards address (pair (nat %reward) (nat %reward_paid))))\n                               (pair (nat %veto) (big_map %vetos key_hash timestamp)))\n                         (pair (big_map %voters\n                                  address\n                                  (pair (pair (option %candidate key_hash) (timestamp %last_veto))\n                                        (pair (nat %veto) (nat %vote))))\n                               (big_map %votes key_hash nat))))\n                (big_map %token_lambdas\n                   nat\n                   (lambda\n                      (pair (pair (or (or (or (pair %iApprove (address %spender) (nat %value))\n                                              (pair %iGetAllowance (pair (address %owner) (address %spender)) (contract nat)))\n                                          (or (pair %iGetBalance (address %owner) (contract nat))\n                                              (pair %iGetTotalSupply unit (contract nat))))\n                                      (pair %iTransfer (address %from) (pair (address %to) (nat %value))))\n                                  (pair (pair (pair (pair (pair (address %baker_validator) (option %current_candidate key_hash))\n                                                          (pair (option %current_delegated key_hash) (timestamp %last_update_time)))\n                                                    (pair (pair (timestamp %last_veto)\n                                                                (big_map %ledger\n                                                                   address\n                                                                   (pair (pair (map %allowances address nat) (nat %balance)) (nat %frozen_balance))))\n                                                          (pair (timestamp %period_finish) (nat %reward))))\n                                              (pair (pair (pair (nat %reward_paid) (nat %reward_per_sec))\n                                                          (pair (nat %reward_per_share) (nat %tez_pool)))\n                                                    (pair (pair (address %token_address) (nat %token_pool))\n                                                          (pair (nat %total_reward) (nat %total_supply)))))\n                                        (pair (pair (pair (nat %total_votes)\n                                                          (big_map %user_rewards address (pair (nat %reward) (nat %reward_paid))))\n                                                    (pair (nat %veto) (big_map %vetos key_hash timestamp)))\n                                              (pair (big_map %voters\n                                                       address\n                                                       (pair (pair (option %candidate key_hash) (timestamp %last_veto))\n                                                             (pair (nat %veto) (nat %vote))))\n                                                    (big_map %votes key_hash nat)))))\n                            address)\n                      (pair (list operation)\n                            (pair (pair (pair (pair (pair (address %baker_validator) (option %current_candidate key_hash))\n                                                    (pair (option %current_delegated key_hash) (timestamp %last_update_time)))\n                                              (pair (pair (timestamp %last_veto)\n                                                          (big_map %ledger\n                                                             address\n                                                             (pair (pair (map %allowances address nat) (nat %balance)) (nat %frozen_balance))))\n                                                    (pair (timestamp %period_finish) (nat %reward))))\n                                        (pair (pair (pair (nat %reward_paid) (nat %reward_per_sec))\n                                                    (pair (nat %reward_per_share) (nat %tez_pool)))\n                                              (pair (pair (address %token_address) (nat %token_pool))\n                                                    (pair (nat %total_reward) (nat %total_supply)))))\n                                  (pair (pair (pair (nat %total_votes)\n                                                    (big_map %user_rewards address (pair (nat %reward) (nat %reward_paid))))\n                                              (pair (nat %veto) (big_map %vetos key_hash timestamp)))\n                                        (pair (big_map %voters\n                                                 address\n                                                 (pair (pair (option %candidate key_hash) (timestamp %last_veto))\n                                                       (pair (nat %veto) (nat %vote))))\n                                              (big_map %votes key_hash nat))))))))) ;\n  code { UNPAIR ;\n         SELF_ADDRESS ;\n         SWAP ;\n         IF_LEFT\n           { IF_LEFT\n               { IF_LEFT\n                   { DIG 2 ;\n                     PUSH nat 1 ;\n                     PAIR ;\n                     DUG 2 ;\n                     LEFT (pair (pair address address) (contract nat)) ;\n                     LEFT (or (pair address (contract nat)) (pair unit (contract nat))) ;\n                     LEFT (pair address (pair address nat)) ;\n                     DIG 2 ;\n                     UNPAIR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     GET ;\n                     IF_NONE\n                       { SWAP ; DIG 2 ; DROP 2 ; PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { DIG 3 ; DUP 3 ; CDR ; CAR ; DIG 4 ; PAIR ; PAIR ; EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR }\n                   { DROP 2 ;\n                     DUP ;\n                     CAR ;\n                     CAR ;\n                     PUSH nat 8 ;\n                     GET ;\n                     IF_NONE\n                       { PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { SELF_ADDRESS ;\n                         DUP 3 ;\n                         CDR ;\n                         CAR ;\n                         PUSH nat 0 ;\n                         RIGHT (pair (pair nat nat) nat) ;\n                         LEFT (or nat (pair nat address)) ;\n                         LEFT (or (or (pair (pair nat nat) address) (pair nat address))\n                                  (or (pair (pair key_hash nat) address) address)) ;\n                         PAIR ;\n                         PAIR ;\n                         EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR } }\n               { IF_LEFT\n                   { DIG 2 ;\n                     PUSH nat 3 ;\n                     PAIR ;\n                     DUG 2 ;\n                     RIGHT (pair address nat) ;\n                     LEFT (or (pair address (contract nat)) (pair unit (contract nat))) ;\n                     LEFT (pair address (pair address nat)) ;\n                     DIG 2 ;\n                     UNPAIR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     GET ;\n                     IF_NONE\n                       { SWAP ; DIG 2 ; DROP 2 ; PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { DIG 3 ; DUP 3 ; CDR ; CAR ; DIG 4 ; PAIR ; PAIR ; EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR }\n                   { DIG 2 ;\n                     PUSH nat 2 ;\n                     PAIR ;\n                     DUG 2 ;\n                     LEFT (pair unit (contract nat)) ;\n                     RIGHT (or (pair address nat) (pair (pair address address) (contract nat))) ;\n                     LEFT (pair address (pair address nat)) ;\n                     DIG 2 ;\n                     UNPAIR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     GET ;\n                     IF_NONE\n                       { SWAP ; DIG 2 ; DROP 2 ; PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { DIG 3 ; DUP 3 ; CDR ; CAR ; DIG 4 ; PAIR ; PAIR ; EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR } } }\n           { IF_LEFT\n               { IF_LEFT\n                   { SWAP ;\n                     DROP ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     NIL operation ;\n                     DIG 2 ;\n                     PUSH mutez 0 ;\n                     DUP 5 ;\n                     CDR ;\n                     CAR ;\n                     CAR ;\n                     CDR ;\n                     CDR ;\n                     CAR ;\n                     CDR ;\n                     DIG 5 ;\n                     CDR ;\n                     CAR ;\n                     CAR ;\n                     CDR ;\n                     CAR ;\n                     CDR ;\n                     CDR ;\n                     PAIR ;\n                     TRANSFER_TOKENS ;\n                     CONS ;\n                     PAIR }\n                   { DIG 2 ;\n                     PUSH nat 4 ;\n                     PAIR ;\n                     DUG 2 ;\n                     RIGHT (pair address (contract nat)) ;\n                     RIGHT (or (pair address nat) (pair (pair address address) (contract nat))) ;\n                     LEFT (pair address (pair address nat)) ;\n                     DIG 2 ;\n                     UNPAIR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     GET ;\n                     IF_NONE\n                       { SWAP ; DIG 2 ; DROP 2 ; PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { DIG 3 ; DUP 3 ; CDR ; CAR ; DIG 4 ; PAIR ; PAIR ; EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR } }\n               { IF_LEFT\n                   { DIG 2 ;\n                     PUSH nat 0 ;\n                     PAIR ;\n                     DUG 2 ;\n                     RIGHT\n                       (or (or (pair address nat) (pair (pair address address) (contract nat)))\n                           (or (pair address (contract nat)) (pair unit (contract nat)))) ;\n                     DIG 2 ;\n                     UNPAIR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     GET ;\n                     IF_NONE\n                       { SWAP ; DIG 2 ; DROP 2 ; PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { DIG 3 ; DUP 3 ; CDR ; CAR ; DIG 4 ; PAIR ; PAIR ; EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR }\n                   { DUP 3 ;\n                     CAR ;\n                     CAR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     IF_LEFT\n                       { IF_LEFT\n                           { IF_LEFT { DROP ; PUSH nat 5 } { DROP ; PUSH nat 0 } }\n                           { IF_LEFT { DROP ; PUSH nat 4 } { DROP ; PUSH nat 1 } } }\n                       { IF_LEFT\n                           { IF_LEFT { DROP ; PUSH nat 2 } { DROP ; PUSH nat 7 } }\n                           { IF_LEFT { DROP ; PUSH nat 6 } { DROP ; PUSH nat 3 } } } ;\n                     GET ;\n                     IF_NONE\n                       { DROP 2 ; PUSH string \"Dex/function-not-set\" ; FAILWITH }\n                       { DIG 2 ; DUP 4 ; CDR ; CAR ; DIG 3 ; PAIR ; PAIR ; EXEC } ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     CDR ;\n                     SWAP ;\n                     DUP ;\n                     DUG 2 ;\n                     CDR ;\n                     PAIR ;\n                     DIG 2 ;\n                     CAR ;\n                     PAIR ;\n                     SWAP ;\n                     CAR ;\n                     PAIR } } } } }"
}
